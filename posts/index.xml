<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Blade Su The Coder</title>
    <link>https://bladesu.github.io/posts/</link>
    <description>Recent content in Posts on Blade Su The Coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 16 Mar 2020 16:38:31 +0800</lastBuildDate>
    
	<atom:link href="https://bladesu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A bug in docker desktop 2.2.0 for Mac OS</title>
      <link>https://bladesu.github.io/posts/2020/03/16/docker_desktop_bug/</link>
      <pubDate>Mon, 16 Mar 2020 16:38:31 +0800</pubDate>
      
      <guid>https://bladesu.github.io/posts/2020/03/16/docker_desktop_bug/</guid>
      <description>For Mac OS user, it should be a easy choice that applying Docker Desktop for docker environment setup. However I got a bug with container starting up for port binding, port 111 was in used status by Desktop I thought. It is a bug for Docker Desk 2.2.0. Some user in the community had found it, I think it should be solved in the following version.
https://github.com/docker/compose/issues/7188?fbclid=IwAR0YVaB6Werd_eRETqF0QYu0M9aMoDayILrAuKhP5l3ulGJoVpCSGzQFRG8</description>
    </item>
    
    <item>
      <title>Start editing learning note for GNU make.</title>
      <link>https://bladesu.github.io/posts/2020/03/04/start_gnu_make/</link>
      <pubDate>Wed, 04 Mar 2020 22:19:33 +0800</pubDate>
      
      <guid>https://bladesu.github.io/posts/2020/03/04/start_gnu_make/</guid>
      <description>GNU make should be most generous building tool or fundation of large building system for C/C++ project. Here I start to write some note for problems when applying GNU make into my projects. It should be updated here: learning/building_tool.</description>
    </item>
    
    <item>
      <title>Coding in C, C standard should be most reliable reference material than everything.</title>
      <link>https://bladesu.github.io/posts/2020/03/03/standard_is_most_important_in_c/</link>
      <pubDate>Tue, 03 Mar 2020 22:22:27 +0800</pubDate>
      
      <guid>https://bladesu.github.io/posts/2020/03/03/standard_is_most_important_in_c/</guid>
      <description>Recently, I start to code a lot in c language. One of my studying material is &amp;ldquo;Head First C&amp;rdquo; written by David Griffith. And I am so confused about an example it talking about XOR encrption.
void encrpt(char *mes) { while (*mes) { *mes = *mes ^ 31; mes++; } } } This code could be compiled without any error or warning (Apple LLVM version 9.1.0 (clang-902.0.39.1)). But I am really curious about how XOR operator worker on the two operand *mes and the integer literal 31.</description>
    </item>
    
    <item>
      <title>My first post</title>
      <link>https://bladesu.github.io/posts/2020/02/19/my-first-post/</link>
      <pubDate>Wed, 19 Feb 2020 18:56:57 +0800</pubDate>
      
      <guid>https://bladesu.github.io/posts/2020/02/19/my-first-post/</guid>
      <description>Thank you for reading this post. This is the first one in my blog.
Since I had connected to internect, I got a lot of knowlege from enormous amount of website. However it really hard to digest and organize all of them.
So I start this blog to put my idea and information collected. If I take something wrong, or you gain from something here. Please give me feedback, thank you.</description>
    </item>
    
  </channel>
</rss>