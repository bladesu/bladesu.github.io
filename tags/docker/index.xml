<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker on Blade Su The Coder</title>
    <link>https://bladesu.github.io/tags/docker/</link>
    <description>Recent content in docker on Blade Su The Coder</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 09 Jun 2020 00:38:08 +0800</lastBuildDate>
    
	<atom:link href="https://bladesu.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Porting Qt libraries and application to ARM-based environment,</title>
      <link>https://bladesu.github.io/posts/2020/06/08/qt_porting/</link>
      <pubDate>Tue, 09 Jun 2020 00:38:08 +0800</pubDate>
      
      <guid>https://bladesu.github.io/posts/2020/06/08/qt_porting/</guid>
      <description>Here I make a practice for application porting to ARM-based environment with leverage of docker container as build platform. This post contains not only application porting but also the Qt library. Finally I demonstrate the GUI application on a target platform(OrangePi, with sunxi H6 CPU) via VNC connection. Here is the link https://bladesu.github.io/learning/devops/cross_compilation/porting_app/qt_porting_orange_pi/.</description>
    </item>
    
    <item>
      <title>An cross-compiling exercise: porting Qt Application to ARM-base environment with docker environment. </title>
      <link>https://bladesu.github.io/learning/devops/cross_compilation/porting_app/qt_porting_orange_pi/</link>
      <pubDate>Mon, 08 Jun 2020 22:01:29 +0800</pubDate>
      
      <guid>https://bladesu.github.io/learning/devops/cross_compilation/porting_app/qt_porting_orange_pi/</guid>
      <description>Recently I finish a exercise that porting Qt-based application from my development environment (Mac OS 10.13.6) to an ARM-based environment(Orange Pi with sunxi H6 SoC). Moreover, I create a docker container as cross-compiling environment with assigned toolchain for ARM.
If we want to run a Qt application on a machine with ARM CPU, we need to prepare built the libraries for Qt runtime. Not only the libraries but the application should be built with the ARM toolchain.</description>
    </item>
    
    <item>
      <title>Introduction with docker buildx for multiple CPU architecture development.</title>
      <link>https://bladesu.github.io/posts/2020/03/18/first_glance2docker_buildx/</link>
      <pubDate>Wed, 18 Mar 2020 21:02:23 +0800</pubDate>
      
      <guid>https://bladesu.github.io/posts/2020/03/18/first_glance2docker_buildx/</guid>
      <description>A new update here: learning/devops/cross_compilation/dockerized/0000_first_try.md
Here I introduce the new docker desktop feature which integrated with qemu and docker buildx command. Now we can build applications in docker images executed with different CPU architectures and run them above operation system with docker environment installed.</description>
    </item>
    
    <item>
      <title>First try to development with ARM docker container[Experimental Feature]</title>
      <link>https://bladesu.github.io/learning/devops/cross_compilation/dockerized/0000_first_try/</link>
      <pubDate>Wed, 18 Mar 2020 11:44:16 +0800</pubDate>
      
      <guid>https://bladesu.github.io/learning/devops/cross_compilation/dockerized/0000_first_try/</guid>
      <description>Build once, run everywhere. Like Java language. Here comes a convenient way to write and deploy application with multiple CPU archtecture articultures attributed by integrated dockerized environments: Docker Desktop(after v2.1.0)
Prepare Docker environment: The environment in this demo I prepared:
 host os: macOS High Sierra 10.13.6 docker environment: integrated in docker desktop v2.1.0.5 (you can check stable release here:link)  Here we need to use docker buildx command, which is provided by docker desktop after v2.</description>
    </item>
    
  </channel>
</rss>